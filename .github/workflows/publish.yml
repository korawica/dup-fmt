name: publish

on:
  release:
    types:
      - prereleased
      - released

permissions:
  contents: read

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"

      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.9"
          cache-dependency-path: pyproject.toml

      - uses: actions/cache@v4
        id: cache
        with:
          path: ${{ env.pythonLocation }}
          key: ${{ runner.os }}-python-${{ env.pythonLocation }}-${{ hashFiles('pyproject.toml') }}-publish

      - name: Install build dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: pip install build

      - name: Build distribution
        run: python -m build

      - run: |
          echo "github ref is:" ${{ github.ref }}
          echo "event name is:" ${{ github.event_name }}
          echo "event type is:" ${{ github.event.action }}

      - name: Publish to Test PyPI
        if: github.event.action == 'prereleased' && startsWith(github.ref, 'refs/tags')
        uses: pypa/gh-action-pypi-publish@v1.8.12
        with:
          password: ${{ secrets.PYPI_TEST_API_TOKEN }}
          repository-url: https://test.pypi.org/legacy/

      - name: Publish to PyPI
        # ${{ !startsWith(github.ref, 'refs/tags') }}
        if: github.event.action == 'released' && startsWith(github.ref, 'refs/tags')
        uses: pypa/gh-action-pypi-publish@v1.8.12
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}

      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"
