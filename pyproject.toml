[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "ddefmt"
description = "The formatter object for data developer and engineering"
readme = "README.md"
requires-python = ">=3.8.10"
license = "MIT"
keywords = []
authors = [
    { name = "korawica", email = "korawica@scg.com" },
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: Implementation :: PyPy",
]
dependencies = [
    "python-dateutil>=2.8.2,<3.0.0",
    "packaging>=23.1,<24",
]
dynamic = ["version"]

[project.urls]
Homepage = "https://github.com/korawica/ddefmt"

[project.optional-dependencies]
test = [
    "pytest>=7.1.3,<8.0.0",
    "coverage[toml]",
    "mypy==0.982",
]
dev = [
    "ruff==0.0.138",
    "pre-commit>=2.17.0,<3.0.0"
]

[tool.coverage.run]
branch = true
parallel = true
context = '${CONTEXT}'
source = [
    "tests",
    "ddefmt"
]
omit = [
    "ddefmt/utils.py",
]
relative_files = true

[tool.coverage.report]
exclude_lines = [
    "no cov",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]

[tool.hatch.version]
source = "code"
path = "ddefmt/__init__.py"

[tool.hatch.build.targets.sdist]
exclude = [
    "/.github",
    "/docs",
    "/scripts",
    "/.pre-commit-config.yaml",
]

[tool.hatch.build.targets.wheel]
packages = ["ddefmt"]

[tool.pytest.ini_options]
console_output_style = "count"
addopts = [
    "--strict-config",
    "--strict-markers",
]
filterwarnings = ["error"]

[tool.mypy]
python_version = "3.8"
files = ["ddefmt"]
show_error_codes = true
pretty = true
strict = true
local_partial_types = true
warn_unreachable = true

[tool.ruff]
line-length = 80
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "C",  # flake8-comprehensions
    "B",  # flake8-bugbear
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".git",
    ".mypy_cache",
    ".ruff_cache",
    "__pypackages__",
    "build",
    "dist",
    "venv",
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.ruff.isort]
known-third-party = ["pydantic"]
